{"version":3,"sources":["components/Fade.module.css","components/Filter/Filter.module.css","components/ContactsList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","App.js","index.js"],"names":["module","exports","Filter","value","onChangeFilter","className","s","filterContainer","filterContainerInput","type","onChange","e","target","ContactForm","state","name","number","handleChange","setState","handleSubmit","preventDefault","props","onAddContact","contactForm","onSubmit","this","contactFormLabel","contactFormInput","placeholder","pattern","contactFormButton","Component","ContactList","contacts","onRemoveContact","TransitionGroup","component","map","contact","CSSTransition","timeout","classNames","Fade","contactItem","contactButton","onClick","id","App","filter","addContact","includes","toast","error","length","uuidv","prevState","changeFilter","getVisibleContacts","toLowerCase","removeContact","contactId","oldNum","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContacts","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","in","appear","ContactsList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc99b22f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"Fade_appear__1hQ1-\",\"appearActive\":\"Fade_appearActive__3QkT3\",\"enter\":\"Fade_enter__1i_HV\",\"enterActive\":\"Fade_enterActive__3Hjr8\",\"exit\":\"Fade_exit__RTRTl\",\"exitActive\":\"Fade_exitActive__1RH45\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__bJll-\",\"filterContainerInput\":\"Filter_filterContainerInput__2NXHh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__A66T4\",\"contactItem\":\"ContactList_contactItem__3Wd42\",\"contactButton\":\"ContactList_contactButton__fCbRo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__1YFRe\",\"contactFormLabel\":\"ContactForm_contactFormLabel__3t0EJ\",\"contactFormInput\":\"ContactForm_contactFormInput__13_iD\",\"contactFormButton\":\"ContactForm_contactFormButton__30aLF\"};","import PropTypes from \"prop-types\";\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div className={s.filterContainer}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.filterContainerInput}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};","import React, { Component } from \"react\";\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact({ ...this.state });\r\n\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.contactForm} onSubmit={this.handleSubmit}>\r\n        <label className={s.contactFormLabel}>\r\n          Name\r\n          <input\r\n            className={s.contactFormInput}\r\n            type='text'\r\n            name='name'\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Name\"\r\n          />\r\n        </label>\r\n        <label className={s.contactFormLabel}>\r\n          Number\r\n          <input\r\n            className={s.contactFormInput}\r\n            type='text'\r\n            name='number'\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            placeholder='xxx-xxx-xxx'\r\n            pattern=\"^[0-9- ]*$\"\r\n          />\r\n        </label>\r\n        <button className={s.contactFormButton} type='submit'>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport s from './ContactList.module.css';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport Fade from '../Fade.module.css';\r\n\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <TransitionGroup component='ul'>\r\n    {contacts.map((contact) =>\r\n      <CSSTransition\r\n        key={contact.id}\r\n        timeout={500}\r\n        classNames={Fade}\r\n      >\r\n        <li className={s.contactItem} key={contact.id}>\r\n          {`${contact.name} : ${contact.number}`}\r\n          {\r\n            <button\r\n              className={s.contactButton}\r\n              type='button'\r\n              name='delete'\r\n              onClick={() => onRemoveContact(contact.id)}\r\n            >\r\n              delete contact\r\n            </button>\r\n          }\r\n        </li>\r\n      </CSSTransition>\r\n    )}\r\n  </TransitionGroup>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n  })),\r\n}\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport ContactsList from './components/ContactsList/ContactsList'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { v4 as uuidv } from 'uuid';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Fade from './components/Fade.module.css';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [ ],\r\n    filter: '',\r\n    name: '',\r\n    number: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    const oldNum = localStorage.getItem('contact');\r\n    if (oldNum) {\r\n      this.setState({\r\n        contacts: JSON.parse(oldNum)\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState !== this.state.contacts.name) {\r\n      localStorage.setItem('contact', JSON.stringify(this.state.contacts));\r\n    }\r\n  };\r\n\r\n  addContact = (e) => {\r\n    const searchSameName = this.state.contacts\r\n      .map((contact) => contact.name)\r\n      .includes(e.name);\r\n    const notify = () => toast.error(`${e.name} is already in contacts`);\r\n    const notEmpty = () => toast.error('the field must not be empty!');\r\n\r\n    if (searchSameName) {\r\n      notify();\r\n    } else if (e.name.length === 0) {\r\n      notEmpty();\r\n    } else {\r\n      const contact = {\r\n        ...e,\r\n        id: uuidv(),\r\n      };\r\n\r\n      this.setState((prevState) => ({\r\n        contacts: [...prevState.contacts, contact],\r\n      }));\r\n    }\r\n  };\r\n\r\n  changeFilter = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n\r\n    return contacts.filter((contacts) =>\r\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  removeContact = (contactId) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <div>\r\n          <ToastContainer\r\n            position=\"top-center\"\r\n            autoClose={5000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n          />\r\n          <CSSTransition\r\n            in\r\n            appear={true}\r\n            timeout={500}\r\n            classNames={Fade}\r\n          >\r\n            <h1>Phonebook</h1>\r\n          </CSSTransition>\r\n          <ContactForm onAddContact={this.addContact} />\r\n          <h2>Contacts</h2>\r\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n          <ContactsList\r\n            contacts={visibleContacts}\r\n            onRemoveContact={this.removeContact}\r\n          /> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <App />,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}